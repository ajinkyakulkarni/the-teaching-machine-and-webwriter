A few weeks ago I promised some thoughts on a javascript class for representing remote Teaching Machines.

I've put a preliminary interface for this on the "devel" branch under project JSTM.

I've written this mostly in typescript as I am allergic to non-statically-checked languages.
I recommend using typescript over javascript.

Here is a run down of the files:
    JSTM.ts   -- declares an interface. It needs many more methods before it is complete. 
                       It should implement the same interface as the current Applet so that we
                       can use JSTM object much as we currently use the Applets (eg. in webwriter sites).
                       These objects also have the ability to produce HTML elements that display
                       aspects of the machine's state.

    addTM.ts -- This declares a function that can add elements generated by a JSTM to a part of a page.
                       It works by replacing placeholder elements in HTML with elements generated by a JSTM.
                       Using this function makes it fairly easy to create some template HTML and then 
                       connect that HTML to a JSTM.

    MockJSTM.ts -- declares a mock implementation of JSTM so that we can see how object implementing
                          the interface might be used.

    fillInTheExpression.html, go.ts -- These files present a question of the "fill in the expression" variety.
         Of course we don't want to be hand coding this sort of thing, we want to generate the HTML
         for questions from descriptions. Also this prototype doesn't have any controller code (yet).
         There is a lot to do with questions in the future.  The main point of this file is to see a
         JSTM (or at least a mockJSTM) in action and to exercise the addTM function.